<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atom.mybatis.mapper.UsedCarCustomerMapper">

    <update id="updateTagsByCustomerMobile" parameterType="com.atom.mybatis.bean.CustomerTags">
        update used_car_customer
        <set>
            tags = #{customer.tags, typeHandler=com.atom.mybatis.typehandler.ListTypeHandler},
        </set>
        where telephone = #{customer.customerMobile}
    </update>


    <!-- 这么写是一种错误的写法，如果 name 条件不匹配，即 name 为空，最后的SQL就会多一个 and 关键字。
    我们 可以 使用trim标签去除多余的and关键字
    select
        *
    from
        used_car_customer t
    where
        and t.age = 88;
     -->
    <select id="selectByConditionWrongWrite" parameterType="com.atom.mybatis.bean.CustomerQuery"
            resultType="com.atom.mybatis.bean.UsedCarCustomerInfo">
        select
        *
        from used_car_customer t
        where
        <if test="name != null">
            t.name = #{name}
        </if>
        <if test="age != null">
            and t.age = #{age}
        </if>
    </select>


    <!--
    使用trim标签去除多余的and关键字，或者使用 <where> 标签， @see selectByConditionRightWrite

  select
      *
  from
      used_car_customer t
  where

      and t.age = 88;
   -->
    <select id="selectByConditionUseWhereTag" parameterType="com.atom.mybatis.bean.CustomerQuery"
            resultType="com.atom.mybatis.bean.UsedCarCustomerInfo">
        select
        *
        from used_car_customer t
        <where>
            <if test="name != null">
                t.name = #{name}
            </if>
            <if test="age != null">
                and t.age = #{age}
            </if>
        </where>
    </select>

</mapper>
